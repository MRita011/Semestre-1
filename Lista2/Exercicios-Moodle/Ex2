/* SEMANA 06: 06/09

 * 2) Faça um programa em java que contenha um menu com as seguintes opções:
 * a) Ler uma string S1 (tamanho máximo 20 caracteres); 
 * b) Imprimir o tamanho da string S1;
 * c) Comparar a string S1 com uma nova string S2 fornecida pelo usuario e imprimir o resultado da comparação;
 * d) Comparar o tamanho da string S1 com uma nova string S2 e informar qual é a maior palavra;
 * e) Concatenar a string S1 com uma nova string S2 e imprimir na tela o resultado da concatenação;
 * f) Substituir a primeira ocorrência do caractere C1 da string S1 pelo caractere C2. Os caracteres C1 e C2 serão lidos pelo usuário;  
 * g) Verificar se uma string S2 e substring de S1. A string S2 deve ser informada pelo  usuario;
 * h) Retornar uma substring da string S1. Para isso o usuario deve informar a partir d.e qual posição deve ser criada a substring e qual  e o tamanho da substring.
 */

import java.util.Scanner;

public class Ex2 {
    public static void main (String args[]) {
        Scanner in = new Scanner (System.in);

        String palavra1, palavra2;
        int menu,inicio, tamanho, comparacao;
        char letra1, letra2;

        System.out.print("\fDigite uma palavra com, no máximo, 20 caracteres: ");
        palavra1 = in.nextLine();

        if (palavra1.length() <= 20) {
            System.out.println
            (
                "\nEscolha uma opção:" +
                "\n1. Imprimir o tamanho da string" +
                "\n2. Comparar a string com outra" +
                "\n3. Comparar o tamanho da string com outra" +
                "\n4. Concatenar a string com outra" +
                "\n5. Substituir a primeira ocorrência de um caractere" +
                "\n6. Verificar se uma string é substring de outra"+
                "\n7. Retornar uma substring da string\n"
            );

            menu = in.nextInt();

            switch (menu) {
                case 1: // Imprimir o tamanho da string
                    System.out.println("\n tamanho da string " + "''" + palavra1 + "''"+ " possui " + palavra1.length() + " caracteres.");
                    break;

                case 2: // Comparar a string com outra
                    System.out.print("\nDigite uma nova string: ");
                    palavra2 = in.nextLine();
                    palavra2 = in.nextLine();

                    comparacao = palavra1.compareToIgnoreCase(palavra2);

                    System.out.println("As comparação das strings é: " + comparacao);
                    break;

                case 3: // Comparar o tamanho da string com outra
                    System.out.print("\nDigite uma nova string: ");
                    palavra2 = in.nextLine();
                    palavra2 = in.nextLine();

                    if (palavra1.length() == palavra2.length()) 
                        System.out.println("As strings ''" + palavra1 + "'' e " + "''"+ palavra2 + "''" + " têm o mesmo tamanho.");
                    else if (palavra1.length() < palavra2.length())
                        System.out.println("A string ''" + palavra2 + "'' é maior do que a string ''" + palavra1 + "''.");
                    else 
                        System.out.println("A string ''" + palavra1 + "'' é maior do que a string ''" + palavra2 + "''.");
                    break;

                case 4: // Concatenar a string com outra
                    System.out.print("\fDigite uma nova string: ");
                    palavra2 = in.nextLine();
                    palavra2 = in.nextLine();

                    System.out.println("\nA união das strings é: " + palavra1.concat(palavra2));
                    break;

                case 5: // Substituir a primeira ocorrência de um caractere
                    System.out.print("\nDigite o caractere C1 a ser substituído: ");
                    letra1 = in.next().charAt(0);
                    in.nextLine(); // Consumir a quebra de linha após o caractere

                    System.out.print("Digite o caractere C2 que substituirá C1: ");
                    letra2 = in.next().charAt(0);
                    in.nextLine(); // Consumir a quebra de linha após o caractere

                    palavra1 = palavra1.replaceFirst(String.valueOf(letra1), String.valueOf(letra2));
                    System.out.println("\nString após a substituição: " + palavra1);
                    break;

                case 6: // Verificar se uma string é substring de outra
                    System.out.print("\nDigite a 2ª string para verificar se ela é substring da 1ª: ");
                    palavra2 = in.nextLine();

                    if (palavra1.contains(palavra2))
                        System.out.println("''" + palavra2 + "'' é uma substring de ''" + palavra1 + "''.");
                    else
                        System.out.println("''" + palavra2 + "'' não é uma substring de ''" + palavra1 + "''.");
                    break;

                case 7: // Retornar uma substring da string
                    System.out.print("\nDigite a posição inicial da string: ");
                    inicio = in.nextInt();
                    in.nextLine(); // Consumir a quebra de linha após a posição inicial

                    System.out.print("Digite o tamanho da substring: ");
                    tamanho = in.nextInt();
                    in.nextLine(); // Consumir a quebra de linha após o tamanho

                    if (inicio >= 0 && inicio <= palavra1.length() - tamanho) {
                        String substring = palavra1.substring(inicio, inicio + tamanho);
                        System.out.println("Substring da string: " + substring);
                    } 
                    else 
                        System.out.println("Posição inicial ou tamanho inválidos.");
                    break;
            }
        }
        else 
            System.out.println("\nA palavra inserida possuí mais de 20 caracteres, tente novamente.");

    }
}

